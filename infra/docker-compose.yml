version: "3.8"
services:
  zookeeper:
    container_name: zookeeper
    image: wurstmeister/zookeeper
    ports:
      - "2181:2181"
    networks:
      - kafka-network

  kafka:
    container_name: kafka
    image: wurstmeister/kafka
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    environment:
      KAFKA_ADVERTISED_HOST_NAME: kafka
      KAFKA_ADVERTISED_PORT: 9092
      KAFKA_CREATE_TOPICS: "agent-runner:5:1,agent-result:3:1,analysis-result:3:1"
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "true"
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    networks:
      - kafka-network

  logstash:
    container_name: logstash
    image: docker.elastic.co/logstash/logstash:7.8.0
    volumes:
      - ./conf/kafka-logstash-pipeline.conf:/usr/share/logstash/pipeline/kafka-logstash-pipeline.conf
    depends_on:
      - kafka
      - elasticsearch
    ports:
      - "9600:9600"
    networks:
      - kafka-network

  elasticsearch:
    container_name: elasticsearch
    image: docker.elastic.co/elasticsearch/elasticsearch:7.8.0
    environment:
      - discovery.type=single-node
    ports:
      - "9200:9200"
    networks:
      - kafka-network

  kibana:
    container_name: kibana
    image: docker.elastic.co/kibana/kibana:7.8.0
    depends_on:
      - elasticsearch
    ports:
      - "5601:5601"
    networks:
      - kafka-network

  controller:
    container_name: poformance-controller
    image: woojindeve/controller
    ports:
      - "8080:8080"
    networks:
      - kafka-network

  agent1:
    container_name: poformance-agent1
    image: woojindeve/agent
    ports:
      - "8081:8080"
    networks:
      - kafka-network

  agent2:
    container_name: poformance-agent2
    image: woojindeve/agent
    ports:
      - "8082:8080"
    networks:
      - kafka-network

  analysis:
    container_name: poformance-analysis
    image: woojindeve/analysis
    ports:
      - "8090:8080"
    networks:
      - kafka-network
networks:
  kafka-network:
